// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: msg_id.proto
// Protobuf C++ Version: 6.30.0

#ifndef msg_5fid_2eproto_2epb_2eh
#define msg_5fid_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_msg_5fid_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_msg_5fid_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_msg_5fid_2eproto;
}  // extern "C"
namespace MSGID {
enum MsgID : int;
extern const uint32_t MsgID_internal_data_[];
}  // namespace MSGID
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::MSGID::MsgID_internal_data_>
    internal::EnumTraitsImpl::value<::MSGID::MsgID>;
}  // namespace protobuf
}  // namespace google

namespace MSGID {
enum MsgID : int {
  CS_HEART_BEAT = 0,
  CS_CONFIG_UPDATE = 1,
  MsgID_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MsgID_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t MsgID_internal_data_[];
inline constexpr MsgID MsgID_MIN =
    static_cast<MsgID>(0);
inline constexpr MsgID MsgID_MAX =
    static_cast<MsgID>(1);
inline bool MsgID_IsValid(int value) {
  return 0 <= value && value <= 1;
}
inline constexpr int MsgID_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MsgID_descriptor();
template <typename T>
const std::string& MsgID_Name(T value) {
  static_assert(std::is_same<T, MsgID>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MsgID_Name().");
  return MsgID_Name(static_cast<MsgID>(value));
}
template <>
inline const std::string& MsgID_Name(MsgID value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MsgID_descriptor, 0, 1>(
      static_cast<int>(value));
}
inline bool MsgID_Parse(
    absl::string_view name, MsgID* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgID>(MsgID_descriptor(), name,
                                           value);
}

// ===================================================================



// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace MSGID


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::MSGID::MsgID> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::MSGID::MsgID>() {
  return ::MSGID::MsgID_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // msg_5fid_2eproto_2epb_2eh
